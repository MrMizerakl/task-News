<?php

namespace app\models;

use Yii;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "news".
 *
 * @property integer $id
 * @property string $title
 * @property string $text
 * @property string $data
 * @property integer $category
 * @property string $photo
 *
 * @property Comments[] $comments
 * @property Ecategory $category0
 * @property Tags[] $tags
 */
class News extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'news';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['title', 'text', 'data', 'category'], 'required'],
            [['text'], 'string'],
            [['data'], 'safe'],
            [['category'], 'integer'],
            [['title', 'photo'], 'string', 'max' => 255],
            [['category'], 'exist', 'skipOnError' => true, 'targetClass' => Ecategory::className(), 'targetAttribute' => ['category' => 'id']],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Title',
            'text' => 'Text',
            'data' => 'Data',
            'category' => 'Category',
            'photo' => 'Photo',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getComments()
    {
        return $this->hasMany(Comments::className(), ['idnews' => 'id'])->orderBy(['id' => SORT_DESC]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCategory0()
    {
        return $this->hasOne(Ecategory::className(), ['id' => 'category']);
    }

    public function getCategoryName( )
    {
        $category = $this->category0;
        return $category ? $category->name : '';
    }
  
    public static function getCategoryList()
    {
        $data = Ecategory::find()->all();
        $value = (count($data)==0)? [''=>''] : ArrayHelper::map($data, 'id', 'name');
        return $value;
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getTags()
    {
        return $this->hasMany(Tags::className(), ['idnews' => 'id']);
    }

    public function beforeSave($insert)
    {
        if ( !$this->photo && isset($this->oldAttributes['photo']) ) {
            $this->photo = $this->oldAttributes['photo'];
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
